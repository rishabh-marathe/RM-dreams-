Q1: Sum of Elements at Even Indices in an Array.
ANS:
public class SumEvenIndices {
    public static void main(String[] args) {
        int[] arr = {3, 20, 4, 6, 9};
        
        // Initialize sum
        int sum = 0;

        // Traverse the array and sum the elements at even indices
        for (int i = 0; i < arr.length; i++) {
            if (i % 2 == 0) {  // Check if index is even
                sum += arr[i];
            }
        }

        // Output the sum
        System.out.println("Sum of elements at even indices: " + sum);
    }
}
Input 1: arr[] = {3,20,4,6,9}
Output 1: 16
Input 1: arr[] = {4,3,6,7,1}
Output 1: 11

Q2: Traverse and Print Even Elements Using For-Each Loop.
ANS:
public class PrintEvenElements {
    public static void main(String[] args) {
        int[] arr = {34, 21, 54, 65, 43};

        // Traverse the array and print even elements
        System.out.print("Even elements: ");
        for (int num : arr) {
            if (num % 2 == 0) {
                System.out.print(num + " ");
            }
        }
    }
}
Input 1: arr[] = {34,21,54,65,43}
Output 1: 34 54
Input 1: arr[] = {4,3,6,7,1}
Output 1: 4 6

Q3: Find the Maximum Element in the Array.
ANS:
public class MaxElement {
    public static void main(String[] args) {
        int[] arr = {34, 21, 54, 65, 43};

        // Assume the first element is the maximum
        int max = arr[0];

        // Loop through the array to find the maximum element
        for (int i = 1; i < arr.length; i++) {
            if (arr[i] > max) {
                max = arr[i];
            }
        }

        // Output the maximum element
        System.out.println("Maximum element: " + max);
    }
}
Input 1: arr[] = {34,21,54,65,43}
Output 1: 65
Input 1: arr[] = {4,3,6,7,1}
Output 1: 7

Q4: Find the Second Largest Element in the Array.
ANS:
public class SecondLargest {
    public static void main(String[] args) {
        int[] arr = {34, 21, 54, 65, 43};

        // Initialize two variables to track the largest and second largest
        int largest = Integer.MIN_VALUE;
        int secondLargest = Integer.MIN_VALUE;

        // Loop through the array to find the largest and second largest
        for (int num : arr) {
            if (num > largest) {
                secondLargest = largest; // Update second largest
                largest = num;  // Update largest
            } else if (num > secondLargest && num != largest) {
                secondLargest = num;  // Update second largest
            }
        }

        // Output the second largest element
        System.out.println("Second largest element: " + secondLargest);
    }
}
Input 1: arr[] = {34,21,54,65,43}
Output 1: 54
Input 1: arr[] = {4,3,6,7,1}
Output 1: 6

Q5: Find the First Peak Element in the Array.
ANS:
public class FirstPeakElement {
    public static void main(String[] args) {
        int[] arr = {1, 3, 2, 6, 5};

        // Check if first element is a peak
        if (arr[0] > arr[1]) {
            System.out.println("First peak element: " + arr[0]);
            return;
        }

        // Check if last element is a peak
        if (arr[arr.length - 1] > arr[arr.length - 2]) {
            System.out.println("First peak element: " + arr[arr.length - 1]);
            return;
        }

        // Traverse the array to find the first peak
        for (int i = 1; i < arr.length - 1; i++) {
            if (arr[i] > arr[i - 1] && arr[i] > arr[i + 1]) {
                System.out.println("First peak element: " + arr[i]);
                return;
            }
        }
    }
}
Input 1: arr[] = {1,3,2,6,5}
Output 1: 6
Input 2: arr[] = {1 4,7,3,2,6,5}
Output 1: 7  